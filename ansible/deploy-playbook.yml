---
- hosts: all
  become: true
  tasks:
    - name: Login to Docker Hub
      docker_login:
        username: ""
        password: ""

    - name: Create Docker network for applications
      docker_network:
        name: app_network
        state: present

    # Database
    - name: Ensure PostgreSQL data directory exists
      file:
        path: /data/postgres
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Ensure PostgreSQL Docker image is present
      docker_image:
        name: "postgres:latest"
        source: pull

    - name: Run PostgreSQL container
      docker_container:
        name: "postgres_container"
        image: "postgres:latest"
        state: started
        restart_policy: always
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: "meu_usuario"
          POSTGRES_PASSWORD: "minha_senha"
          POSTGRES_DB: "minha_database"
        volumes:
          - "/data/postgres:/var/lib/postgresql/data"
        networks:
          - name: app_network

    # Deploy Back-end (Docker)
    - name: Ensure Back-end Docker image is present
      docker_image:
        name: "carmelitabraga/projetin-backend:v1"
        source: pull

    - name: Run Back-end container
      docker_container:
        name: "back_container"
        image: "carmelitabraga/projetin-backend:v1"
        state: started
        restart_policy: always
        ports:
          - "8000:8000"
        env:
          DB_HOST: "postgres_container"
          DB_PORT: "5432"
          DB_USER: "meu_usuario"
          DB_PASSWORD: "minha_senha"
          DB_NAME: "minha_database"
          SECRET_KEY: "django-insecure-80*zzycuuejq47jtjf(2)mk6(trdjtwtdnd_tj35x5=!n8da-d"
          CORS_ALLOWED_ORIGINS: "http://10.96.0.1"
        command: >
          /bin/sh -c "python3 manage.py makemigrations &&
           python3 manage.py migrate &&
           python3 manage.py runserver 0.0.0.0:8000"
        networks:
          - name: app_network

    # Deploy Front-end (Docker)
    - name: Ensure Front-end Docker image is present
      docker_image:
        name: "carmelitabraga/projetin-frontend:v1"
        source: pull

    - name: Run Front-end container
      docker_container:
        name: "front_container"
        image: "carmelitabraga/projetin-frontend:v1"
        state: started
        restart_policy: always
        ports:
          - "10000:10000"
        env:
          NEXT_PUBLIC_APP_NAME: "projetin_esinco"
          NEXT_PUBLIC_APP_PRETTY_NAME: "ProjetIn"
          NEXT_PUBLIC_API_URL: "http://back_container:8000"
        # command: >
        #   /bin/sh -c "npm run setup-prod && npm run start"
        networks:
          - name: app_network